@* 
 * Copyright (c) 2025 MSIH LLC. All rights reserved.
 * This file is developed for Make Sure It Happens Inc.
 * Unauthorized copying, modification, distribution, or use is prohibited.
 *@

@namespace msih.p4g.Client.Layout.Components
@inject IJSRuntime JSRuntime
@implements IAsyncDisposable

<style>
    .navbar, .top-row {
        background-color: #343a40 !important;
        color: #fff;
    }
    .nav-link {
        color: #e0e0e0 !important;
    }
    .nav-link.active {
        background-color: #007bff !important;
        color: #fff !important;
    }
    .nav-item {
        margin-bottom: 0.25rem;
    }
    .sidebar {
        background: #23272b !important;
    }
    .navbar-brand {
        color: #fff !important;
    }
</style>

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">msih.p4g</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="MaybeCollapseNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="donate">
                <span class="oi oi-heart" aria-hidden="true"></span> Donate
            </NavLink>
        </div>        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="users">
                <span class="oi oi-people" aria-hidden="true"></span> Users
            </NavLink>
        </div>        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="sms">
                <span class="oi oi-phone" aria-hidden="true"></span> SMS
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="phone-validation">
                <span class="oi oi-phone" aria-hidden="true"></span> Phone Validation
            </NavLink>
        </div>
        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="fundraiser">
                <span class="oi oi-dollar" aria-hidden="true"></span> My Fundraiser
            </NavLink>
        </div>
        
        <hr class="my-2 border-secondary" />
        
        <div class="nav-item px-3">
            <span class="nav-link d-flex align-items-center disabled">
                <span class="oi oi-cog me-2" aria-hidden="true"></span> 
                <span class="fw-bold">Admin</span>
            </span>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="admin/organizations">
                <span class="oi oi-building" aria-hidden="true"></span> Organizations
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="admin/settings">
                <span class="oi oi-cog" aria-hidden="true"></span> Settings
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="admin/migrations">
                <span class="oi oi-dashboard" aria-hidden="true"></span> Migrations
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="admin/message-templates">
                <span class="oi oi-envelope-closed" aria-hidden="true"></span> Message Templates
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="admin/campaigns">
                <span class="oi oi-briefcase" aria-hidden="true"></span> Campaigns
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="admin/donors">
                <span class="oi oi-dollar" aria-hidden="true"></span> Donors
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="admin/profiles">
                <span class="oi oi-person" aria-hidden="true"></span> Profiles
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="payout-tester">
                <span class="oi oi-transfer" aria-hidden="true"></span> Payout Tester
            </NavLink>
        </div>
        
        <hr class="my-2 border-secondary" />
        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="payment/braintree">
                <span class="oi oi-credit-card" aria-hidden="true"></span> Payment Demo
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = false; // Default expanded
    private bool isSmallScreen = false;
    private const int MOBILE_WIDTH_THRESHOLD = 768; // Bootstrap's md breakpoint
    private DotNetObjectReference<NavMenu>? objRef;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void MaybeCollapseNavMenu()
    {
        // Only collapse the menu on small screens
        if (isSmallScreen)
        {
            collapseNavMenu = true;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Create reference to this component
            objRef = DotNetObjectReference.Create(this);
            
            // Check initial screen size
            await CheckScreenSize();
            
            // Register for resize events
            await JSRuntime.InvokeVoidAsync("setNavMenuReference", objRef);
        }
    }

    private async Task CheckScreenSize()
    {
        try 
        {
            var width = await JSRuntime.InvokeAsync<int>("getWindowWidth");
            isSmallScreen = width < MOBILE_WIDTH_THRESHOLD;
        }
        catch
        {
            // If JS interop fails, default to false to prevent menu from collapsing
            isSmallScreen = false;
        }
    }

    [JSInvokable]
    public async Task OnBrowserResize()
    {
        await CheckScreenSize();
        StateHasChanged();
    }

    public async ValueTask DisposeAsync()
    {
        // Clean up the reference when the component is disposed
        if (objRef != null)
        {
            objRef.Dispose();
        }
    }
}
