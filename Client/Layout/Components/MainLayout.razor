@*
 * Copyright (c) 2025 MSIH LLC. All rights reserved.
 * This file is developed for Make Sure It Happens Inc.
 * Unauthorized copying, modification, distribution, or use is prohibited.
 *@

@namespace msih.p4g.Client.Layout.Components
@inherits LayoutComponentBase
@using msih.p4g.Client.Features.Authentication.Services
@inject AuthService AuthService
@implements IDisposable

<style>
    /* Mobile-First Responsive Base */
    * {
        box-sizing: border-box;
    }

    /* Orange Motif Theme */
    :root {
        --orange-primary: #ff6b35;
        --orange-secondary: #f7931e;
        --orange-tertiary: #ffab00;
        --orange-light: rgba(255, 107, 53, 0.1);
        --orange-darker: #e55a2b;
        --text-dark: #2c3e50;
        --text-light: #6c757d;
        --border-radius: 8px;
        --card-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        --card-shadow-hover: 0 4px 16px rgba(255, 107, 53, 0.2);
        --transition: all 0.3s ease;
    }

    .orange-motif {
        background: linear-gradient(135deg, var(--orange-primary) 0%, var(--orange-secondary) 50%, var(--orange-tertiary) 100%);
        color: white;
    }

    .orange-accent {
        border-left: 4px solid var(--orange-primary);
        background: linear-gradient(90deg, var(--orange-light) 0%, transparent 100%);
    }

    /* Solid orange background for top menu row */
    .orange-top-row {
        background: linear-gradient(135deg, var(--orange-primary) 0%, var(--orange-secondary) 50%, var(--orange-tertiary) 100%);
        border-bottom: 2px solid var(--orange-darker);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .orange-divider {
        height: 2px;
        background: linear-gradient(90deg, var(--orange-primary) 0%, var(--orange-secondary) 50%, var(--orange-tertiary) 100%);
        margin: 1rem 0;
    }

    /* Brand/Logo styling */
    .brand-text {
        color: white;
        font-weight: 600;
        font-size: 1.1rem;
        text-decoration: none;
        margin: 0;
        white-space: nowrap;
    }

    .brand-text:hover {
        color: white;
        text-decoration: none;
        opacity: 0.9;
    }

    /* Mobile-First Typography */
    h1, h2, h3, h4, h5, h6 {
        color: var(--text-dark);
        margin-bottom: 0.75rem;
        line-height: 1.3;
    }

    h1 { font-size: 1.75rem; }
    h2 { font-size: 1.5rem; }
    h3 { font-size: 1.25rem; }
    h4 { font-size: 1.1rem; }
    h5 { font-size: 1rem; }
    h6 { font-size: 0.9rem; }

    /* Card-Based Layout */
    .card-modern {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        border: 1px solid #e9ecef;
        margin-bottom: 1rem;
        transition: var(--transition);
    }

    .card-modern:hover {
        box-shadow: var(--card-shadow-hover);
        transform: translateY(-2px);
    }

    .card-modern .card-header {
        background: var(--orange-light);
        border-bottom: 2px solid var(--orange-primary);
        border-radius: var(--border-radius) var(--border-radius) 0 0;
        padding: 0.75rem 1rem;
    }

    .card-modern .card-body {
        padding: 1rem;
    }

    /* Mobile-First Button Styling */
    .btn-orange-gradient {
        background: linear-gradient(135deg, var(--orange-primary) 0%, var(--orange-secondary) 50%, var(--orange-tertiary) 100%);
        border: 2px solid var(--orange-primary);
        color: white;
        font-weight: 500;
        padding: 0.5rem 1rem;
        border-radius: var(--border-radius);
        transition: var(--transition);
        font-size: 0.9rem;
        min-height: 44px; /* Touch-friendly */
    }

    .btn-orange-gradient:hover, .btn-orange-gradient:focus {
        background: linear-gradient(135deg, var(--orange-darker) 0%, #e8851a 50%, #e69900 100%);
        border-color: var(--orange-darker);
        color: white;
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(255, 107, 53, 0.3);
    }

    .btn-orange-outline {
        background: transparent;
        border: 2px solid var(--orange-primary);
        color: var(--orange-primary);
        font-weight: 500;
        padding: 0.5rem 1rem;
        border-radius: var(--border-radius);
        transition: var(--transition);
        min-height: 44px;
    }

    .btn-orange-outline:hover, .btn-orange-outline:focus {
        background: var(--orange-primary);
        color: white;
        transform: translateY(-1px);
    }

    /* Mobile-First Spacing */
    .compact-spacing {
        padding: 0.5rem;
        margin: 0.25rem 0;
    }

    .section-spacing {
        margin-bottom: 1.5rem;
    }

    /* Visual Hierarchy */
    .page-header {
        background: var(--orange-light);
        border-left: 4px solid var(--orange-primary);
        padding: 1rem;
        margin-bottom: 1.5rem;
        border-radius: var(--border-radius);
    }

    .page-header h1 {
        margin-bottom: 0.25rem;
        color: var(--orange-primary);
    }

    .page-header p {
        color: var(--text-light);
        margin-bottom: 0;
        font-size: 0.9rem;
    }

    /* Layout Structure */
    .page {
        min-height: 100vh;
        display: flex;
        flex-direction: column;
    }

    .main-content {
        flex: 1;
    }

    .content {
        padding: 0.75rem !important;
    }

    /* Top row styling similar to AdminLayout but with orange theme */
    .top-row {
        height: 3.5rem;
        display: flex;
        align-items: center;
        position: sticky;
        top: 0;
        z-index: 1000;
    }

</style>

<div class="page">
    <main class="container-fluid px-0 main-content">
        <div class="top-row px-2 px-md-4 d-flex justify-content-between align-items-center orange-top-row">
            <div class="d-flex align-items-center">
                <a href="/" class="brand-text">Make Sure It Happens</a>
            </div>

            @if (AuthService.IsAuthenticated)
            {
                <div>
                    <UserMenu />
                </div>
            }
        </div>

        <article class="content">
            @Body
        </article>
    </main>
    <Footer />
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        // Subscribe to auth state changes to trigger UI updates
        AuthService.AuthStateChanged += OnAuthStateChanged;

        // Initialize authentication state if not already done
        if (!AuthService.IsInitialized)
        {
            await AuthService.InitializeAuthenticationStateAsync();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !AuthService.IsAuthenticated && !AuthService.IsInitialized)
        {
            // Only try to restore authentication after the first render when JS is available
            await AuthService.InitializeAuthenticationStateAsync();
            StateHasChanged(); // Trigger a re-render if auth state changed
        }
    }

    private void OnAuthStateChanged()
    {
        // Trigger UI refresh when auth state changes
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        // Unsubscribe from the event when the component is disposed
        AuthService.AuthStateChanged -= OnAuthStateChanged;
    }
}
