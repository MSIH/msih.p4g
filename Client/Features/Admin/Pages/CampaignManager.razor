@* Copyright (c) 2025 MSIH LLC. All rights reserved.
   This file is developed for Make Sure It Happens Inc.
   Unauthorized copying, modification, distribution, or use is prohibited. *@
@page "/admin/campaigns"
@layout AdminLayout
@using msih.p4g.Client.Layout.Components
@using msih.p4g.Client.Common.Services
@using msih.p4g.Server.Features.CampaignService.Model
@using msih.p4g.Server.Features.CampaignService.Interfaces
@inject ICampaignService CampaignService
@inject NavigationManager Navigation
@inject AuthorizationService AuthorizationService

<h3>Manage Donation Campaigns</h3>

<div class="mb-3">
    <label>Title</label>
    <input class="form-control" @bind="newCampaign.Title" maxlength="100" />
</div>
<div class="mb-3">
    <label>Description</label>
    <textarea class="form-control" @bind="newCampaign.Description" maxlength="1000"></textarea>
</div>
<button class="btn btn-primary mb-3" @onclick="AddCampaign">Add Campaign</button>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Active</th>
            <th>Default</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var campaign in campaigns)
        {
            <tr>
                <td>
                    @if (editingCampaignId == campaign.Id)
                    {
                        <input type="text" class="form-control" @bind="editTitle" maxlength="100" />
                    }
                    else
                    {
                        <span>@campaign.Title</span>
                    }
                </td>
                <td>
                    @if (editingCampaignId == campaign.Id)
                    {
                        <textarea class="form-control" @bind="editDescription" maxlength="1000" rows="3"></textarea>
                    }
                    else
                    {
                        <span>@campaign.Description</span>
                    }
                </td>
                <td>
                    <input type="checkbox" @bind="campaign.IsActive" />
                </td> 
                <td>
                    <input type="checkbox" checked="@campaign.IsDefault" disabled />
                </td>
                <td>
                    @if (editingCampaignId == campaign.Id)
                    {
                        <button class="btn btn-success btn-sm me-1" @onclick="() => SaveEdit(campaign)">Save</button>
                        <button class="btn btn-secondary btn-sm me-1" @onclick="CancelEdit">Cancel</button>
                    }
                    else
                    {
                        <button class="btn btn-primary btn-sm me-1" @onclick="() => StartEdit(campaign)">Edit</button>
                        <button class="btn btn-warning btn-sm me-1" @onclick="() => SaveCampaign(campaign)">Save Status</button>
                    }
                    <button class="btn btn-danger btn-sm me-1" @onclick="() => DeactivateCampaign(campaign.Id)">Deactivate</button>
                    @if (!campaign.IsDefault)
                    {
                        <button class="btn btn-info btn-sm" @onclick="() => SetDefaultCampaign(campaign.Id)">Set Default</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Campaign> campaigns = new();
    private Campaign newCampaign = new();
    private int? editingCampaignId = null;
    private string editTitle = "";
    private string editDescription = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadCampaigns();
    }

    private async Task LoadCampaigns()
    {
        campaigns = (await CampaignService.GetAllAsync()).ToList();
    }

    private async Task AddCampaign()
    {
        if (!string.IsNullOrWhiteSpace(newCampaign.Title))
        {
            await CampaignService.AddAsync(newCampaign);
            newCampaign = new();
            await LoadCampaigns();
        }
    }

    private void StartEdit(Campaign campaign)
    {
        editingCampaignId = campaign.Id;
        editTitle = campaign.Title;
        editDescription = campaign.Description ?? "";
    }

    private async Task SaveEdit(Campaign campaign)
    {
        if (!string.IsNullOrWhiteSpace(editTitle))
        {
            campaign.Title = editTitle;
            campaign.Description = editDescription;
            
            await CampaignService.UpdateAsync(campaign);
            await LoadCampaigns();
            
            editingCampaignId = null;
            editTitle = "";
            editDescription = "";
        }
    }

    private void CancelEdit()
    {
        editingCampaignId = null;
        editTitle = "";
        editDescription = "";
    }

    private async Task SaveCampaign(Campaign campaign)
    {
        await CampaignService.UpdateAsync(campaign);
        await LoadCampaigns();
    }

    private async Task DeactivateCampaign(int id)
    {
        if (await CampaignService.SetActiveAsync(id, false))
        {
            await LoadCampaigns();
        }
    }

    private async Task SetDefaultCampaign(int id)
    {
        if (await CampaignService.SetDefaultCampaignAsync(id))
        {
            await LoadCampaigns();
        }
    }
}
