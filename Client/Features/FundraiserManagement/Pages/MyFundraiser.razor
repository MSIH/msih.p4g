@page "/fundraiser"
@namespace msih.p4g.Client.Features.FundraiserManagement.Pages
@using msih.p4g.Client.Features.Authentication.Services
@using msih.p4g.Client.Features.Donations.Components
@using msih.p4g.Server.Features.FundraiserService.Model
@using msih.p4g.Server.Features.FundraiserService.Interfaces
@using msih.p4g.Server.Features.Base.UserService.Interfaces
@using msih.p4g.Server.Features.Base.UserService.Models
@using msih.p4g.Server.Features.Base.ProfileService.Interfaces
@using msih.p4g.Server.Features.Base.ProfileService.Model
@using msih.p4g.Server.Features.DonationService.Interfaces
@using msih.p4g.Client.Common.Components
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject IFundraiserService FundraiserService
@inject IDonationService DonationService
@inject IUserService UserService
@inject IProfileService ProfileService
@inject msih.p4g.Server.Features.FundraiserService.Interfaces.IFundraiserStatisticsService FundraiserStatsService
@inject IJSRuntime JSRuntime
@inject AuthService AuthService
@inject NavigationManager NavigationManager

<PageTitle>My Fundraiser</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card mb-4">
                <div class="card-header">
                    <h3 class="card-title">My Fundraiser</h3>
                </div>
                <div class="card-body">
                    @if (isLoading)
                    {
                        <div class="d-flex justify-content-center">
                            <div class="spinner-border" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    }
                    else if (fundraiser == null && userPrincipal?.Role == UserRole.Fundraiser)
                    {
                        <div class="alert alert-warning">
                            <p>Fundraiser information not found. Please contact support if you believe this is an error.</p>
                        </div>
                    }
                    else
                    {
                        @if (!string.IsNullOrEmpty(message))
                        {
                            <div class="alert @(message.StartsWith("Error") ? "alert-danger" : "alert-success") mb-4">
                                @message
                            </div>
                        }

                        @if (profile != null && !string.IsNullOrEmpty(profile.ReferralCode))
                        {
                            <div class="card mb-4">
                                <div class="card-header">
                                    <h3 class="card-title">My Donation Referral Link</h3>
                                </div>
                                <div class="card-body">
                                    <div class="alert alert-info">
                                        <p class="mb-1">Share this link to track donations:</p>
                                        <ReferralLinkComponent Profile="@profile"
                                                               OnError="@HandleReferralLinkError"
                                                               OnUrlCopied="@HandleUrlCopied" />
                                    </div>
                                </div>
                            </div>
                        }

                        @* Only show fundraiser-specific forms and commission info if user is a fundraiser *@
                        @if (userPrincipal?.Role == UserRole.Fundraiser && fundraiser != null)
                        {
                            <EditForm Model="@fundraiser" OnValidSubmit="HandleFundraiserUpdate">
                                <DataAnnotationsValidator />
                                <ValidationSummary />

                                <div class="card mb-4">
                                    <div class="card-header">
                                        <h3 class="card-title">Fundraiser Settings</h3>
                                    </div>
                                    <div class="card-body">
                                        <div class="mb-4">
                                            <label for="payoutAccount" class="form-label">Payout Account</label>
                                            <InputText id="payoutAccount" @bind-Value="fundraiser.PayoutAccount" class="form-control" />
                                            <small class="text-muted">This is the mobile, email, or handle where your commissions will be sent.</small>
                                        </div>

                                        <div class="mb-4">
                                            <label for="accountType" class="form-label">Payment Account Type</label>
                                            <InputSelect id="accountType" @bind-Value="fundraiser.PayoutAccountType" class="form-control">
                                                <option value="">-- Select Account Type --</option>
                                                <option value="PayPal">PayPal</option>
                                                <option value="Venmo">Venmo</option>
                                            </InputSelect>
                                            <small class="text-muted">Select your payment account type</small>
                                        </div>

                                        <div class="mb-4">
                                            <label for="paymentAccountFormat" class="form-label">Payment Account Format</label>
                                            <InputSelect id="paymentAccountFormat" @bind-Value="fundraiser.PayoutAccountFormat" class="form-control">
                                                <option value="">-- Select Format --</option>
                                                <option value="Email">Email</option>
                                                <option value="Handle">Handle (@@username)</option>
                                                <option value="Mobile">Mobile Number</option>
                                            </InputSelect>
                                            <small class="text-muted">How your payment account is identified</small>
                                        </div>

                                        <div class="mb-4">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <label for="w9Document" class="form-label mb-0">W9 Tax Form</label>
                                                <button type="button" class="btn btn-outline-primary btn-sm" @onclick="NavigateToW9Form">
                                                    <span class="oi oi-document me-1"></span> @(string.IsNullOrEmpty(fundraiser.W9Document) ? "Complete W9 Form" : "View/Edit W9 Form")
                                                </button>
                                            </div>
                                            <div class="mt-2">
                                                @if (string.IsNullOrEmpty(fundraiser.W9Document))
                                                {
                                                    <div class="alert alert-warning py-2">
                                                        <small class="mb-0">You need to complete a W9 tax form to receive payments over $600.</small>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="alert alert-success py-2">
                                                        <small class="mb-0">W9 form submitted: @fundraiser.W9Document</small>
                                                    </div>
                                                }
                                            </div>
                                        </div>

                                        <div class="mb-4">
                                            <button type="submit" class="btn btn-primary" disabled="@isSaving">
                                                @if (isSaving)
                                                {
                                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                                    <span> Saving...</span>
                                                }
                                                else
                                                {
                                                    <span>Save Changes</span>
                                                }
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </EditForm>
                        }
                    }
                </div>
            </div>



            @* Show donation statistics and history for all users with referral codes *@
            @if (profile != null && !string.IsNullOrEmpty(profile.ReferralCode) && statistics != null)
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h3 class="card-title">Donation Statistics</h3>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="card bg-light mb-3">
                                    <div class="card-body text-center">
                                        <h5 class="card-title">Total Donations</h5>
                                        <p class="display-4">@statistics.DonationCount</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card bg-light mb-3">
                                    <div class="card-body text-center">
                                        <h5 class="card-title">Total Raised</h5>
                                        <p class="display-4">$@statistics.TotalRaised.ToString("N2")</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card bg-light mb-3">
                                    <div class="card-body text-center">
                                        <h5 class="card-title">Average Donation</h5>
                                        <p class="display-4">$@statistics.AverageDonation.ToString("N2")</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <DonationHistoryComponent ShowSummary="false" ShowActions="false" ReferralCode="@profile.ReferralCode" />

                @* Show commission information only for fundraisers *@
                @if (userPrincipal?.Role == UserRole.Fundraiser && fundraiser != null)
                {
                    <msih.p4g.Client.Features.FundraiserManagement.Component.AffiliateComissions FundraiserId="@fundraiser.Id" Profile="@profile" />
                }
            }
        </div>
    </div>
</div>

@code {
    private msih.p4g.Server.Features.FundraiserService.Model.Fundraiser fundraiser;
    private Profile profile;
    private FundraiserStatistics statistics;
    private User userPrincipal;
    private bool isLoading = true;
    private bool isSaving = false;
    private string message = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadFundraiserDataAsync();
    }

    private async Task LoadFundraiserDataAsync()
    {
        isLoading = true;
        message = string.Empty;

        try
        {
            // Get the current user using the AuthService
            userPrincipal = await AuthService.GetCurrentUserAsync();

            // Check if user principal is null or has no valid ID
            if (userPrincipal == null || userPrincipal.Id <= 0)
            {
                message = "Error: User not authenticated or invalid user ID. Please log in again.";
                NavigationManager.NavigateTo("/login");
                return;
            }

            // Get user's profile for the referral code (always load this for all user types)
            profile = await ProfileService.GetByIdAsync(userPrincipal.Id);

            // Only try to get fundraiser data if user is a fundraiser
            // if (userPrincipal.Role == UserRole.Fundraiser)
            // {
                fundraiser = await FundraiserService.GetByUserIdAsync(userPrincipal.Id);
                
                // If fundraiser is still null for a fundraiser user, create a default one
                if (fundraiser == null)
                {
                    fundraiser = new msih.p4g.Server.Features.FundraiserService.Model.Fundraiser
                    {
                        PayoutAccount = string.Empty,
                        W9Document = string.Empty
                    };
                }
            // }

            // Get donation statistics based on referral code for all user types
            if (profile != null && !string.IsNullOrEmpty(profile.ReferralCode))
            {
                // For fundraisers, use their fundraiser ID if available, otherwise calculate from donations
                if (fundraiser != null)
                {
                    statistics = await FundraiserStatsService.GetStatisticsAsync(fundraiser.Id);
                }
                else
                {
                    // For non-fundraisers or fundraisers without a fundraiser record,
                    // calculate statistics from donations by referral code
                    var donations = await DonationService.GetByReferralCodeAsync(profile.ReferralCode);
                    statistics = new FundraiserStatistics
                    {
                        DonationCount = donations.Count,
                        TotalRaised = donations.Sum(d => d.DonationAmount),
                        AverageDonation = donations.Any() ? donations.Average(d => d.DonationAmount) : 0
                    };
                }
            }
        }
        catch (Exception ex)
        {
            message = $"Error loading data: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task HandleFundraiserUpdate()
    {
        // Only allow fundraiser updates for fundraiser role
        if (userPrincipal?.Role != UserRole.Fundraiser || fundraiser == null)
        {
            message = "Error: Only fundraisers can update fundraiser information.";
            return;
        }

        isSaving = true;
        message = string.Empty;

        try
        {
            // Save fundraiser
            await FundraiserService.UpdateAsync(fundraiser);
            message = "Fundraiser information updated successfully!";
        }
        catch (Exception ex)
        {
            message = $"Error updating fundraiser information: {ex.Message}";
        }
        finally
        {
            isSaving = false;
            StateHasChanged();
        }
    }

    private async Task HandleReferralLinkError(string errorMessage)
    {
        message = errorMessage;
        StateHasChanged();
    }

    private async Task HandleUrlCopied()
    {
        // Optional: Add any additional logic when URL is copied successfully
        // For example, analytics tracking or showing a temporary success message
    }

    private void NavigateToW9Form()
    {
        // Only fundraisers can access W9 forms
        if (userPrincipal?.Role != UserRole.Fundraiser)
        {
            message = "Error: Only fundraisers can access W9 forms.";
            return;
        }

        if (fundraiser != null && fundraiser.Id > 0)
        {
            NavigationManager.NavigateTo($"/w9form/{fundraiser.Id}");
        }
        else
        {
            NavigationManager.NavigateTo("/w9form");
        }
    }
}
